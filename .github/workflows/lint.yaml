---
name: Lint Code Base

on:
  push:
  pull_request:
    branches: [main]

jobs:
  # lint:
  #   # Name the Job
  #   name: Lint Code Base
  #   # Set the agent to run on
  #   runs-on: ubuntu-latest

  #   ############################################
  #   # Grant status permission for MULTI_STATUS #
  #   ############################################
  #   permissions:
  #     contents: read
  #     packages: read
  #     statuses: write

  #   ##################
  #   # Load all steps #
  #   ##################
  #   steps:
  #     ##########################
  #     # Checkout the code base #
  #     ##########################
  #     - name: Checkout Code
  #       uses: actions/checkout@v3
  #       with:
  #         # Full git history is needed to get a proper
  #         # list of changed files within `super-linter`
  #         fetch-depth: 0

  #     ################################
  #     # Run Linter against code base #
  #     ################################
  #     - name: Lint Code Base
  #       uses: super-linter/super-linter@v5
  #       env:
  #         # Only lint code that's been changed
  #         VALIDATE_ALL_CODEBASE: false
  #         DEFAULT_BRANCH: main
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-scan-push:
    # Name the Job
    name: Build Docker Image
    # Set the agent to run on
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: gchr.io/jimmy-ungerman/golang-api:latest
